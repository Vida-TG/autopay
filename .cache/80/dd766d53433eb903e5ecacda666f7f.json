{"id":"../node_modules/near-api-js/lib/utils/enums.js","dependencies":[{"name":"C:\\Users\\LENOVO\\Downloads\\nearpay\\package.json","includedInParent":true,"mtime":1683277982216},{"name":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\near-api-js\\package.json","includedInParent":true,"mtime":1683142735553},{"name":"@near-js/types","loc":{"line":4,"column":22,"index":143},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\near-api-js\\lib\\utils\\enums.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\types\\lib\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Enum = exports.Assignable = void 0;\nvar types_1 = require(\"@near-js/types\");\nObject.defineProperty(exports, \"Assignable\", { enumerable: true, get: function () { return types_1.Assignable; } });\n/** @hidden @module */\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nexports.Enum = Enum;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/near-api-js/lib/utils/enums.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"../node_modules/near-api-js/lib/utils/enums.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Enum = exports.Assignable = void 0;\nvar types_1 = require(\"@near-js/types\");\nObject.defineProperty(exports, \"Assignable\", { enumerable: true, get: function () { return types_1.Assignable; } });\n/** @hidden @module */\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nexports.Enum = Enum;\n"},"lineCount":19}},"error":null,"hash":"4f8c168b6c0e7455a0f2ed0c5c0e558b","cacheData":{"env":{}}}