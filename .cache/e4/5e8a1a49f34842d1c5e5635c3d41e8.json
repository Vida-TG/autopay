{"id":"../node_modules/@near-js/signers/lib/in_memory_signer.js","dependencies":[{"name":"C:\\Users\\LENOVO\\Downloads\\nearpay\\package.json","includedInParent":true,"mtime":1683277982216},{"name":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\signers\\package.json","includedInParent":true,"mtime":1683142729030},{"name":"@near-js/crypto","loc":{"line":16,"column":25,"index":955},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\signers\\lib\\in_memory_signer.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\crypto\\lib\\index.js"},{"name":"@near-js/keystores","loc":{"line":17,"column":28,"index":1003},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\signers\\lib\\in_memory_signer.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\keystores\\lib\\index.js"},{"name":"js-sha256","loc":{"line":18,"column":44,"index":1070},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\signers\\lib\\in_memory_signer.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\js-sha256\\src\\sha256.js"},{"name":"./signer","loc":{"line":19,"column":25,"index":1110},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\signers\\lib\\in_memory_signer.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\signers\\lib\\signer.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemorySigner = void 0;\nconst crypto_1 = require(\"@near-js/crypto\");\nconst keystores_1 = require(\"@near-js/keystores\");\nconst js_sha256_1 = __importDefault(require(\"js-sha256\"));\nconst signer_1 = require(\"./signer\");\n/**\n * Signs using in memory key store.\n */\nclass InMemorySigner extends signer_1.Signer {\n    constructor(keyStore) {\n        super();\n        this.keyStore = keyStore;\n    }\n    /**\n     * Creates a single account Signer instance with account, network and keyPair provided.\n     *\n     * Intended to be useful for temporary keys (e.g. claiming a Linkdrop).\n     *\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account to assign the key pair to\n     * @param keyPair The keyPair to use for signing\n     */\n    static fromKeyPair(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyStore = new keystores_1.InMemoryKeyStore();\n            yield keyStore.setKey(networkId, accountId, keyPair);\n            return new InMemorySigner(keyStore);\n        });\n    }\n    /**\n     * Creates a public key for the account given\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>}\n     */\n    createKey(accountId, networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = crypto_1.KeyPair.fromRandom('ed25519');\n            yield this.keyStore.setKey(networkId, accountId, keyPair);\n            return keyPair.getPublicKey();\n        });\n    }\n    /**\n     * Gets the existing public key for a given account\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>} Returns the public key or null if not found\n     */\n    getPublicKey(accountId, networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = yield this.keyStore.getKey(networkId, accountId);\n            if (keyPair === null) {\n                return null;\n            }\n            return keyPair.getPublicKey();\n        });\n    }\n    /**\n     * @param message A message to be signed, typically a serialized transaction\n     * @param accountId the NEAR account signing the message\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<Signature>}\n     */\n    signMessage(message, accountId, networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const hash = new Uint8Array(js_sha256_1.default.sha256.array(message));\n            if (!accountId) {\n                throw new Error('InMemorySigner requires provided account id');\n            }\n            const keyPair = yield this.keyStore.getKey(networkId, accountId);\n            if (keyPair === null) {\n                throw new Error(`Key for ${accountId} not found in ${networkId}`);\n            }\n            return keyPair.sign(hash);\n        });\n    }\n    toString() {\n        return `InMemorySigner(${this.keyStore})`;\n    }\n}\nexports.InMemorySigner = InMemorySigner;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@near-js/signers/lib/in_memory_signer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}}],"sources":{"../node_modules/@near-js/signers/lib/in_memory_signer.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemorySigner = void 0;\nconst crypto_1 = require(\"@near-js/crypto\");\nconst keystores_1 = require(\"@near-js/keystores\");\nconst js_sha256_1 = __importDefault(require(\"js-sha256\"));\nconst signer_1 = require(\"./signer\");\n/**\n * Signs using in memory key store.\n */\nclass InMemorySigner extends signer_1.Signer {\n    constructor(keyStore) {\n        super();\n        this.keyStore = keyStore;\n    }\n    /**\n     * Creates a single account Signer instance with account, network and keyPair provided.\n     *\n     * Intended to be useful for temporary keys (e.g. claiming a Linkdrop).\n     *\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account to assign the key pair to\n     * @param keyPair The keyPair to use for signing\n     */\n    static fromKeyPair(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyStore = new keystores_1.InMemoryKeyStore();\n            yield keyStore.setKey(networkId, accountId, keyPair);\n            return new InMemorySigner(keyStore);\n        });\n    }\n    /**\n     * Creates a public key for the account given\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>}\n     */\n    createKey(accountId, networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = crypto_1.KeyPair.fromRandom('ed25519');\n            yield this.keyStore.setKey(networkId, accountId, keyPair);\n            return keyPair.getPublicKey();\n        });\n    }\n    /**\n     * Gets the existing public key for a given account\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>} Returns the public key or null if not found\n     */\n    getPublicKey(accountId, networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = yield this.keyStore.getKey(networkId, accountId);\n            if (keyPair === null) {\n                return null;\n            }\n            return keyPair.getPublicKey();\n        });\n    }\n    /**\n     * @param message A message to be signed, typically a serialized transaction\n     * @param accountId the NEAR account signing the message\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<Signature>}\n     */\n    signMessage(message, accountId, networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const hash = new Uint8Array(js_sha256_1.default.sha256.array(message));\n            if (!accountId) {\n                throw new Error('InMemorySigner requires provided account id');\n            }\n            const keyPair = yield this.keyStore.getKey(networkId, accountId);\n            if (keyPair === null) {\n                throw new Error(`Key for ${accountId} not found in ${networkId}`);\n            }\n            return keyPair.sign(hash);\n        });\n    }\n    toString() {\n        return `InMemorySigner(${this.keyStore})`;\n    }\n}\nexports.InMemorySigner = InMemorySigner;\n"},"lineCount":96}},"error":null,"hash":"9d8d5147012cc3d55eb01a876461ea75","cacheData":{"env":{}}}