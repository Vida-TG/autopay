{"id":"../node_modules/near-abi/lib/index.js","dependencies":[{"name":"C:\\Users\\LENOVO\\Downloads\\nearpay\\package.json","includedInParent":true,"mtime":1683277982216},{"name":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\near-abi\\package.json","includedInParent":true,"mtime":1683142723654}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbiSerializationType = exports.AbiFunctionModifier = exports.AbiFunctionKind = exports.SCHEMA_VERSION = void 0;\nexports.SCHEMA_VERSION = \"0.3.0\";\n/**\n * Function kind regulates whether this function's invocation requires a transaction (so-called\n * call functions) or not (view functions).\n */\nvar AbiFunctionKind;\n(function (AbiFunctionKind) {\n    AbiFunctionKind[\"View\"] = \"view\";\n    AbiFunctionKind[\"Call\"] = \"call\";\n})(AbiFunctionKind = exports.AbiFunctionKind || (exports.AbiFunctionKind = {}));\n/** Function can have multiple modifiers that can change its semantics. */\nvar AbiFunctionModifier;\n(function (AbiFunctionModifier) {\n    /** Init functions can be used to initialize the state of the contract. */\n    AbiFunctionModifier[\"Init\"] = \"init\";\n    /**\n     * Private functions can only be called from the contract containing them. Usually, when a\n     * contract has to have a callback for a remote cross-contract call, this callback method\n     * should only be called by the contract itself.\n     */\n    AbiFunctionModifier[\"Private\"] = \"private\";\n    /** Payable functions can accept token transfer together with the function call.\n     * This is done so that contracts can define a fee in tokens that needs to be payed when\n     * they are used.\n     */\n    AbiFunctionModifier[\"Payable\"] = \"payable\";\n})(AbiFunctionModifier = exports.AbiFunctionModifier || (exports.AbiFunctionModifier = {}));\n/** Supported serialization formats. */\nvar AbiSerializationType;\n(function (AbiSerializationType) {\n    AbiSerializationType[\"Json\"] = \"json\";\n    AbiSerializationType[\"Borsh\"] = \"borsh\";\n})(AbiSerializationType = exports.AbiSerializationType || (exports.AbiSerializationType = {}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/near-abi/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/near-abi/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}}],"sources":{"../node_modules/near-abi/lib/index.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbiSerializationType = exports.AbiFunctionModifier = exports.AbiFunctionKind = exports.SCHEMA_VERSION = void 0;\nexports.SCHEMA_VERSION = \"0.3.0\";\n/**\n * Function kind regulates whether this function's invocation requires a transaction (so-called\n * call functions) or not (view functions).\n */\nvar AbiFunctionKind;\n(function (AbiFunctionKind) {\n    AbiFunctionKind[\"View\"] = \"view\";\n    AbiFunctionKind[\"Call\"] = \"call\";\n})(AbiFunctionKind = exports.AbiFunctionKind || (exports.AbiFunctionKind = {}));\n/** Function can have multiple modifiers that can change its semantics. */\nvar AbiFunctionModifier;\n(function (AbiFunctionModifier) {\n    /** Init functions can be used to initialize the state of the contract. */\n    AbiFunctionModifier[\"Init\"] = \"init\";\n    /**\n     * Private functions can only be called from the contract containing them. Usually, when a\n     * contract has to have a callback for a remote cross-contract call, this callback method\n     * should only be called by the contract itself.\n     */\n    AbiFunctionModifier[\"Private\"] = \"private\";\n    /** Payable functions can accept token transfer together with the function call.\n     * This is done so that contracts can define a fee in tokens that needs to be payed when\n     * they are used.\n     */\n    AbiFunctionModifier[\"Payable\"] = \"payable\";\n})(AbiFunctionModifier = exports.AbiFunctionModifier || (exports.AbiFunctionModifier = {}));\n/** Supported serialization formats. */\nvar AbiSerializationType;\n(function (AbiSerializationType) {\n    AbiSerializationType[\"Json\"] = \"json\";\n    AbiSerializationType[\"Borsh\"] = \"borsh\";\n})(AbiSerializationType = exports.AbiSerializationType || (exports.AbiSerializationType = {}));\n"},"lineCount":37}},"error":null,"hash":"667b0f5fb8e25a5836933a76d0e63a41","cacheData":{"env":{}}}