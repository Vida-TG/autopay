{"id":"../node_modules/@near-js/accounts/lib/contract.js","dependencies":[{"name":"C:\\Users\\LENOVO\\Downloads\\nearpay\\package.json","includedInParent":true,"mtime":1683277982216},{"name":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\package.json","includedInParent":true,"mtime":1683142730194},{"name":"@near-js/utils","loc":{"line":16,"column":24,"index":948},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\contract.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\utils\\lib\\index.js"},{"name":"@near-js/types","loc":{"line":17,"column":24,"index":991},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\contract.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\types\\lib\\index.js"},{"name":"ajv","loc":{"line":18,"column":38,"index":1048},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\contract.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\node_modules\\ajv\\dist\\ajv.js"},{"name":"ajv-formats","loc":{"line":19,"column":46,"index":1103},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\contract.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\node_modules\\ajv-formats\\dist\\index.js"},{"name":"bn.js","loc":{"line":20,"column":40,"index":1160},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\contract.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\bn.js\\lib\\bn.js"},{"name":"depd","loc":{"line":21,"column":39,"index":1210},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\contract.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\depd\\lib\\browser\\index.js"},{"name":"near-abi","loc":{"line":22,"column":27,"index":1247},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\contract.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\near-abi\\lib\\index.js"},{"name":"./errors","loc":{"line":23,"column":25,"index":1285},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\contract.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\errors.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nconst utils_1 = require(\"@near-js/utils\");\nconst types_1 = require(\"@near-js/types\");\nconst ajv_1 = __importDefault(require(\"ajv\"));\nconst ajv_formats_1 = __importDefault(require(\"ajv-formats\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst near_abi_1 = require(\"near-abi\");\nconst errors_1 = require(\"./errors\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nfunction validateArguments(args, abiFunction, ajv, abiRoot) {\n    var _a;\n    if (!isObject(args))\n        return;\n    if (abiFunction.params && abiFunction.params.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.params.serialization_type);\n    }\n    if (abiFunction.result && abiFunction.result.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.result.serialization_type);\n    }\n    const params = ((_a = abiFunction.params) === null || _a === void 0 ? void 0 : _a.args) || [];\n    for (const p of params) {\n        const arg = args[p.name];\n        const typeSchema = p.type_schema;\n        typeSchema.definitions = abiRoot.body.root_schema.definitions;\n        const validate = ajv.compile(typeSchema);\n        if (!validate(arg)) {\n            throw new errors_1.ArgumentSchemaError(p.name, validate.errors);\n        }\n    }\n    // Check there are no extra unknown arguments passed\n    for (const argName of Object.keys(args)) {\n        const param = params.find((p) => p.name === argName);\n        if (!param) {\n            throw new errors_1.UnknownArgumentError(argName, params.map((p) => p.name));\n        }\n    }\n}\nfunction createAjv() {\n    // Strict mode is disabled for now as it complains about unknown formats. We need to\n    // figure out if we want to support a fixed set of formats. `uint32` and `uint64`\n    // are added explicitly just to reduce the amount of warnings as these are very popular\n    // types.\n    const ajv = new ajv_1.default({\n        strictSchema: false,\n        formats: {\n            uint32: true,\n            uint64: true\n        }\n    });\n    (0, ajv_formats_1.default)(ajv);\n    return ajv;\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#contract](https://docs.near.org/tools/near-api-js/quick-reference#contract)\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [], abi: abiRoot } = options;\n        let viewMethodsWithAbi = viewMethods.map((name) => ({ name, abi: null }));\n        let changeMethodsWithAbi = changeMethods.map((name) => ({ name, abi: null }));\n        if (abiRoot) {\n            if (viewMethodsWithAbi.length > 0 || changeMethodsWithAbi.length > 0) {\n                throw new errors_1.ConflictingOptions();\n            }\n            viewMethodsWithAbi = abiRoot.body.functions\n                .filter((m) => m.kind === near_abi_1.AbiFunctionKind.View)\n                .map((m) => ({ name: m.name, abi: m }));\n            changeMethodsWithAbi = abiRoot.body.functions\n                .filter((methodAbi) => methodAbi.kind === near_abi_1.AbiFunctionKind.Call)\n                .map((methodAbi) => ({ name: methodAbi.name, abi: methodAbi }));\n        }\n        const ajv = createAjv();\n        viewMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, (args = {}, options = {}, ...ignored) => __awaiter(this, void 0, void 0, function* () {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (abi) {\n                        validateArguments(args, abi, ajv, abiRoot);\n                    }\n                    return this.account.viewFunction(Object.assign({ contractId: this.contractId, methodName: name, args }, options));\n                }))\n            });\n        });\n        changeMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, (...args) => __awaiter(this, void 0, void 0, function* () {\n                    if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = (0, depd_1.default)('contract.methodName(args, gas, amount)');\n                        deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n                        args[0] = {\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2]\n                        };\n                    }\n                    if (abi) {\n                        validateArguments(args[0].args, abi, ajv, abiRoot);\n                    }\n                    return this._changeMethod(Object.assign({ methodName: name }, args[0]));\n                }))\n            });\n        });\n    }\n    _changeMethod({ args, methodName, gas, amount, meta, callbackUrl }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateBNLike({ gas, amount });\n            const rawResult = yield this.account.functionCall({\n                contractId: this.contractId,\n                methodName,\n                args,\n                gas,\n                attachedDeposit: amount,\n                walletMeta: meta,\n                walletCallbackUrl: callbackUrl\n            });\n            return (0, utils_1.getTransactionLastResult)(rawResult);\n        });\n    }\n}\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n            throw new types_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/contract.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}}],"sources":{"../node_modules/@near-js/accounts/lib/contract.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nconst utils_1 = require(\"@near-js/utils\");\nconst types_1 = require(\"@near-js/types\");\nconst ajv_1 = __importDefault(require(\"ajv\"));\nconst ajv_formats_1 = __importDefault(require(\"ajv-formats\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst near_abi_1 = require(\"near-abi\");\nconst errors_1 = require(\"./errors\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nfunction validateArguments(args, abiFunction, ajv, abiRoot) {\n    var _a;\n    if (!isObject(args))\n        return;\n    if (abiFunction.params && abiFunction.params.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.params.serialization_type);\n    }\n    if (abiFunction.result && abiFunction.result.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.result.serialization_type);\n    }\n    const params = ((_a = abiFunction.params) === null || _a === void 0 ? void 0 : _a.args) || [];\n    for (const p of params) {\n        const arg = args[p.name];\n        const typeSchema = p.type_schema;\n        typeSchema.definitions = abiRoot.body.root_schema.definitions;\n        const validate = ajv.compile(typeSchema);\n        if (!validate(arg)) {\n            throw new errors_1.ArgumentSchemaError(p.name, validate.errors);\n        }\n    }\n    // Check there are no extra unknown arguments passed\n    for (const argName of Object.keys(args)) {\n        const param = params.find((p) => p.name === argName);\n        if (!param) {\n            throw new errors_1.UnknownArgumentError(argName, params.map((p) => p.name));\n        }\n    }\n}\nfunction createAjv() {\n    // Strict mode is disabled for now as it complains about unknown formats. We need to\n    // figure out if we want to support a fixed set of formats. `uint32` and `uint64`\n    // are added explicitly just to reduce the amount of warnings as these are very popular\n    // types.\n    const ajv = new ajv_1.default({\n        strictSchema: false,\n        formats: {\n            uint32: true,\n            uint64: true\n        }\n    });\n    (0, ajv_formats_1.default)(ajv);\n    return ajv;\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#contract](https://docs.near.org/tools/near-api-js/quick-reference#contract)\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [], abi: abiRoot } = options;\n        let viewMethodsWithAbi = viewMethods.map((name) => ({ name, abi: null }));\n        let changeMethodsWithAbi = changeMethods.map((name) => ({ name, abi: null }));\n        if (abiRoot) {\n            if (viewMethodsWithAbi.length > 0 || changeMethodsWithAbi.length > 0) {\n                throw new errors_1.ConflictingOptions();\n            }\n            viewMethodsWithAbi = abiRoot.body.functions\n                .filter((m) => m.kind === near_abi_1.AbiFunctionKind.View)\n                .map((m) => ({ name: m.name, abi: m }));\n            changeMethodsWithAbi = abiRoot.body.functions\n                .filter((methodAbi) => methodAbi.kind === near_abi_1.AbiFunctionKind.Call)\n                .map((methodAbi) => ({ name: methodAbi.name, abi: methodAbi }));\n        }\n        const ajv = createAjv();\n        viewMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, (args = {}, options = {}, ...ignored) => __awaiter(this, void 0, void 0, function* () {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (abi) {\n                        validateArguments(args, abi, ajv, abiRoot);\n                    }\n                    return this.account.viewFunction(Object.assign({ contractId: this.contractId, methodName: name, args }, options));\n                }))\n            });\n        });\n        changeMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, (...args) => __awaiter(this, void 0, void 0, function* () {\n                    if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = (0, depd_1.default)('contract.methodName(args, gas, amount)');\n                        deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n                        args[0] = {\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2]\n                        };\n                    }\n                    if (abi) {\n                        validateArguments(args[0].args, abi, ajv, abiRoot);\n                    }\n                    return this._changeMethod(Object.assign({ methodName: name }, args[0]));\n                }))\n            });\n        });\n    }\n    _changeMethod({ args, methodName, gas, amount, meta, callbackUrl }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateBNLike({ gas, amount });\n            const rawResult = yield this.account.functionCall({\n                contractId: this.contractId,\n                methodName,\n                args,\n                gas,\n                attachedDeposit: amount,\n                walletMeta: meta,\n                walletCallbackUrl: callbackUrl\n            });\n            return (0, utils_1.getTransactionLastResult)(rawResult);\n        });\n    }\n}\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n            throw new types_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n"},"lineCount":206}},"error":null,"hash":"3a3e8010aa60af76adb01ed08ef3ed62","cacheData":{"env":{}}}