{"id":"../node_modules/@near-js/accounts/lib/account_multisig.js","dependencies":[{"name":"C:\\Users\\LENOVO\\Downloads\\nearpay\\package.json","includedInParent":true,"mtime":1683277982216},{"name":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\package.json","includedInParent":true,"mtime":1683142730194},{"name":"@near-js/transactions","loc":{"line":13,"column":31,"index":823},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\account_multisig.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\transactions\\lib\\index.js"},{"name":"./account","loc":{"line":14,"column":26,"index":875},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\account_multisig.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\account.js"},{"name":"./constants","loc":{"line":15,"column":28,"index":917},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\account_multisig.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\constants.js"},{"name":"./types","loc":{"line":16,"column":24,"index":957},"parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\account_multisig.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\types.js"},{"name":"buffer","parent":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\@near-js\\accounts\\lib\\account_multisig.js","resolved":"C:\\Users\\LENOVO\\Downloads\\nearpay\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountMultisig = void 0;\nconst transactions_1 = require(\"@near-js/transactions\");\nconst account_1 = require(\"./account\");\nconst constants_1 = require(\"./constants\");\nconst types_1 = require(\"./types\");\nconst { deployContract, functionCall } = transactions_1.actionCreators;\nvar MultisigCodeStatus;\n(function (MultisigCodeStatus) {\n    MultisigCodeStatus[MultisigCodeStatus[\"INVALID_CODE\"] = 0] = \"INVALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"VALID_CODE\"] = 1] = \"VALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"UNKNOWN_CODE\"] = 2] = \"UNKNOWN_CODE\";\n})(MultisigCodeStatus || (MultisigCodeStatus = {}));\n// in memory request cache for node w/o localStorage\nconst storageFallback = {\n    [constants_1.MULTISIG_STORAGE_KEY]: null\n};\nclass AccountMultisig extends account_1.Account {\n    constructor(connection, accountId, options) {\n        super(connection, accountId);\n        this.storage = options.storage;\n        this.onAddRequestResult = options.onAddRequestResult;\n    }\n    signAndSendTransactionWithAccount(receiverId, actions) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.signAndSendTransaction.call(this, { receiverId, actions });\n        });\n    }\n    signAndSendTransaction({ receiverId, actions }) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const args = Buffer.from(JSON.stringify({\n                request: {\n                    receiver_id: receiverId,\n                    actions: convertActions(actions, accountId, receiverId)\n                }\n            }));\n            let result;\n            try {\n                result = yield _super.signAndSendTransaction.call(this, {\n                    receiverId: accountId,\n                    actions: [\n                        functionCall('add_request_and_confirm', args, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                    ]\n                });\n            }\n            catch (e) {\n                if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {\n                    yield this.deleteUnconfirmedRequests();\n                    return yield this.signAndSendTransaction({ receiverId, actions });\n                }\n                throw e;\n            }\n            // TODO: Are following even needed? Seems like it throws on error already\n            if (!result.status) {\n                throw new Error('Request failed');\n            }\n            const status = Object.assign({}, result.status);\n            if (!status.SuccessValue || typeof status.SuccessValue !== 'string') {\n                throw new Error('Request failed');\n            }\n            this.setRequest({\n                accountId,\n                actions,\n                requestId: parseInt(Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)\n            });\n            if (this.onAddRequestResult) {\n                yield this.onAddRequestResult(result);\n            }\n            // NOTE there is no await on purpose to avoid blocking for 2fa\n            this.deleteUnconfirmedRequests();\n            return result;\n        });\n    }\n    /*\n     * This method submits a canary transaction that is expected to always fail in order to determine whether the contract currently has valid multisig state\n     * and whether it is initialized. The canary transaction attempts to delete a request at index u32_max and will go through if a request exists at that index.\n     * a u32_max + 1 and -1 value cannot be used for the canary due to expected u32 error thrown before deserialization attempt.\n     */\n    checkMultisigCodeAndStateStatus(contractBytes) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const u32_max = 4294967295;\n            const validCodeStatusIfNoDeploy = contractBytes ? MultisigCodeStatus.UNKNOWN_CODE : MultisigCodeStatus.VALID_CODE;\n            try {\n                if (contractBytes) {\n                    yield _super.signAndSendTransaction.call(this, {\n                        receiverId: this.accountId, actions: [\n                            deployContract(contractBytes),\n                            functionCall('delete_request', { request_id: u32_max }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                        ]\n                    });\n                }\n                else {\n                    yield this.deleteRequest(u32_max);\n                }\n                return { codeStatus: MultisigCodeStatus.VALID_CODE, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n            }\n            catch (e) {\n                if (new RegExp(types_1.MultisigDeleteRequestRejectionError.CANNOT_DESERIALIZE_STATE).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.INVALID_STATE };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.MULTISIG_NOT_INITIALIZED).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.STATE_NOT_INITIALIZED };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.NO_SUCH_REQUEST).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.METHOD_NOT_FOUND).test(e && e.message)) {\n                    // not reachable if transaction included a deploy\n                    return { codeStatus: MultisigCodeStatus.INVALID_CODE, stateStatus: types_1.MultisigStateStatus.UNKNOWN_STATE };\n                }\n                throw e;\n            }\n        });\n    }\n    deleteRequest(request_id) {\n        return super.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [functionCall('delete_request', { request_id }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n        });\n    }\n    deleteAllRequests() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request_ids = yield this.getRequestIds();\n            if (request_ids.length) {\n                yield Promise.all(request_ids.map((id) => this.deleteRequest(id)));\n            }\n        });\n    }\n    deleteUnconfirmedRequests() {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Delete in batch, don't delete unexpired\n            // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)\n            const request_ids = yield this.getRequestIds();\n            const { requestId } = this.getRequest();\n            for (const requestIdToDelete of request_ids) {\n                if (requestIdToDelete == requestId) {\n                    continue;\n                }\n                try {\n                    yield _super.signAndSendTransaction.call(this, {\n                        receiverId: this.accountId,\n                        actions: [functionCall('delete_request', { request_id: requestIdToDelete }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n                    });\n                }\n                catch (e) {\n                    console.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');\n                }\n            }\n        });\n    }\n    // helpers\n    getRequestIds() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Read requests from state to allow filtering by expiration time\n            // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84\n            return this.viewFunction({\n                contractId: this.accountId,\n                methodName: 'list_request_ids',\n            });\n        });\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(constants_1.MULTISIG_STORAGE_KEY) || '{}');\n        }\n        return storageFallback[constants_1.MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(constants_1.MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[constants_1.MULTISIG_STORAGE_KEY] = data;\n    }\n}\nexports.AccountMultisig = AccountMultisig;\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: constants_1.MULTISIG_ALLOWANCE.toString(),\n                method_names: constants_1.MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/@near-js/accounts/lib/account_multisig.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}}],"sources":{"../node_modules/@near-js/accounts/lib/account_multisig.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccountMultisig = void 0;\nconst transactions_1 = require(\"@near-js/transactions\");\nconst account_1 = require(\"./account\");\nconst constants_1 = require(\"./constants\");\nconst types_1 = require(\"./types\");\nconst { deployContract, functionCall } = transactions_1.actionCreators;\nvar MultisigCodeStatus;\n(function (MultisigCodeStatus) {\n    MultisigCodeStatus[MultisigCodeStatus[\"INVALID_CODE\"] = 0] = \"INVALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"VALID_CODE\"] = 1] = \"VALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"UNKNOWN_CODE\"] = 2] = \"UNKNOWN_CODE\";\n})(MultisigCodeStatus || (MultisigCodeStatus = {}));\n// in memory request cache for node w/o localStorage\nconst storageFallback = {\n    [constants_1.MULTISIG_STORAGE_KEY]: null\n};\nclass AccountMultisig extends account_1.Account {\n    constructor(connection, accountId, options) {\n        super(connection, accountId);\n        this.storage = options.storage;\n        this.onAddRequestResult = options.onAddRequestResult;\n    }\n    signAndSendTransactionWithAccount(receiverId, actions) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.signAndSendTransaction.call(this, { receiverId, actions });\n        });\n    }\n    signAndSendTransaction({ receiverId, actions }) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const args = Buffer.from(JSON.stringify({\n                request: {\n                    receiver_id: receiverId,\n                    actions: convertActions(actions, accountId, receiverId)\n                }\n            }));\n            let result;\n            try {\n                result = yield _super.signAndSendTransaction.call(this, {\n                    receiverId: accountId,\n                    actions: [\n                        functionCall('add_request_and_confirm', args, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                    ]\n                });\n            }\n            catch (e) {\n                if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {\n                    yield this.deleteUnconfirmedRequests();\n                    return yield this.signAndSendTransaction({ receiverId, actions });\n                }\n                throw e;\n            }\n            // TODO: Are following even needed? Seems like it throws on error already\n            if (!result.status) {\n                throw new Error('Request failed');\n            }\n            const status = Object.assign({}, result.status);\n            if (!status.SuccessValue || typeof status.SuccessValue !== 'string') {\n                throw new Error('Request failed');\n            }\n            this.setRequest({\n                accountId,\n                actions,\n                requestId: parseInt(Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)\n            });\n            if (this.onAddRequestResult) {\n                yield this.onAddRequestResult(result);\n            }\n            // NOTE there is no await on purpose to avoid blocking for 2fa\n            this.deleteUnconfirmedRequests();\n            return result;\n        });\n    }\n    /*\n     * This method submits a canary transaction that is expected to always fail in order to determine whether the contract currently has valid multisig state\n     * and whether it is initialized. The canary transaction attempts to delete a request at index u32_max and will go through if a request exists at that index.\n     * a u32_max + 1 and -1 value cannot be used for the canary due to expected u32 error thrown before deserialization attempt.\n     */\n    checkMultisigCodeAndStateStatus(contractBytes) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const u32_max = 4294967295;\n            const validCodeStatusIfNoDeploy = contractBytes ? MultisigCodeStatus.UNKNOWN_CODE : MultisigCodeStatus.VALID_CODE;\n            try {\n                if (contractBytes) {\n                    yield _super.signAndSendTransaction.call(this, {\n                        receiverId: this.accountId, actions: [\n                            deployContract(contractBytes),\n                            functionCall('delete_request', { request_id: u32_max }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                        ]\n                    });\n                }\n                else {\n                    yield this.deleteRequest(u32_max);\n                }\n                return { codeStatus: MultisigCodeStatus.VALID_CODE, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n            }\n            catch (e) {\n                if (new RegExp(types_1.MultisigDeleteRequestRejectionError.CANNOT_DESERIALIZE_STATE).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.INVALID_STATE };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.MULTISIG_NOT_INITIALIZED).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.STATE_NOT_INITIALIZED };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.NO_SUCH_REQUEST).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.METHOD_NOT_FOUND).test(e && e.message)) {\n                    // not reachable if transaction included a deploy\n                    return { codeStatus: MultisigCodeStatus.INVALID_CODE, stateStatus: types_1.MultisigStateStatus.UNKNOWN_STATE };\n                }\n                throw e;\n            }\n        });\n    }\n    deleteRequest(request_id) {\n        return super.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [functionCall('delete_request', { request_id }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n        });\n    }\n    deleteAllRequests() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request_ids = yield this.getRequestIds();\n            if (request_ids.length) {\n                yield Promise.all(request_ids.map((id) => this.deleteRequest(id)));\n            }\n        });\n    }\n    deleteUnconfirmedRequests() {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Delete in batch, don't delete unexpired\n            // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)\n            const request_ids = yield this.getRequestIds();\n            const { requestId } = this.getRequest();\n            for (const requestIdToDelete of request_ids) {\n                if (requestIdToDelete == requestId) {\n                    continue;\n                }\n                try {\n                    yield _super.signAndSendTransaction.call(this, {\n                        receiverId: this.accountId,\n                        actions: [functionCall('delete_request', { request_id: requestIdToDelete }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n                    });\n                }\n                catch (e) {\n                    console.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');\n                }\n            }\n        });\n    }\n    // helpers\n    getRequestIds() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Read requests from state to allow filtering by expiration time\n            // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84\n            return this.viewFunction({\n                contractId: this.accountId,\n                methodName: 'list_request_ids',\n            });\n        });\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(constants_1.MULTISIG_STORAGE_KEY) || '{}');\n        }\n        return storageFallback[constants_1.MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(constants_1.MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[constants_1.MULTISIG_STORAGE_KEY] = data;\n    }\n}\nexports.AccountMultisig = AccountMultisig;\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: constants_1.MULTISIG_ALLOWANCE.toString(),\n                method_names: constants_1.MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n"},"lineCount":234}},"error":null,"hash":"db03dfc94ddb92f7bd6b1cbaee67b8ea","cacheData":{"env":{}}}